1. modules classes cohesion

2. The variable YESNO_ANSWERS means the answers yes or no to a question. 
The variable location means the location where you are. 
The function load_advent_dat is used to load game. 

3. The functions random, choice, write only do one thing and the the functions loop, move_to, move_dwarves do more than one thing. 

4. The function loop has side effect. 

5. The function _do_command in game.py has some repeated code which can be written as functions. 

6. The function t_suspend in game.py uses exception handling. I cannot find any input that causes the program to terminate abnormally. 

7. The class Game.

8. Class Object in model.py is not cohesive. 

9. There are two kinds of comments: """...""" and #. The author uses comments to explain what he did in the following or one line code.
Good comments:
look_complaints = 3  # how many times to "SORRY, BUT I AM NOT ALLOWED..."
full_description_period = 5  # how often we use a room's full description

Bad comments: 
dwarves_killed = 0  # DKILL
knife_location = None  # KNFLOC
Still don't know what does this command do.

10. In game.py
def random(self):
        return self.random_generator.random()

def choice(self, seq):
        return self.random_generator.choice(seq)

def write(self, more):
        """Append the Unicode representation of `s` to our output."""
        if more:
            self.output += str(more).upper()
            self.output += '\n'
 
Leave blank lines between functions and related codes are close. 

11. Passed test_data.py and test_walks.py but failed test_commands.py with error no module named play. The tests meet fast, independent, repeatable and self-validating but I don't know whether the test code was written before or after the program is complete. 


